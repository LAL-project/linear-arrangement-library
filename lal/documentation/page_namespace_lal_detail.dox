/*********************************************************************
 *
 * Linear Arrangement Library - A library that implements a collection
 * algorithms for linear arrangments of graphs.
 *
 * Copyright (C) 2019 - 2024
 *
 * This file is part of Linear Arrangement Library. The full code is available
 * at:
 *      https://github.com/LAL-project/linear-arrangement-library.git
 *
 * Linear Arrangement Library is free software: you can redistribute it
 * and/or modify it under the terms of the GNU Affero General Public License
 * as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Linear Arrangement Library is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Linear Arrangement Library.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Contact:
 *
 *     Llu√≠s Alemany Puig (lluis.alemany.puig@upc.edu)
 *         LQMC (Quantitative, Mathematical, and Computational Linguisitcs)
 *         CQL (Complexity and Quantitative Linguistics Lab)
 *         Jordi Girona St 1-3, Campus Nord UPC, 08034 Barcelona.   CATALONIA, SPAIN
 *         Webpage: https://cqllab.upc.edu/people/lalemany/
 *
 *     Juan Luis Esteban (esteban@cs.upc.edu)
 *         LOGPROG: Logics and Programming Research Group
 *         Office 110, Omega building
 *         Jordi Girona St 1-3, Campus Nord UPC, 08034 Barcelona.   CATALONIA, SPAIN
 *         Webpage: https://www.cs.upc.edu/~esteban/
 *
 *     Ramon Ferrer i Cancho (rferrericancho@cs.upc.edu)
 *         LQMC (Quantitative, Mathematical, and Computational Linguisitcs)
 *         CQL (Complexity and Quantitative Linguistics Lab)
 *         Office 220, Omega building
 *         Jordi Girona St 1-3, Campus Nord UPC, 08034 Barcelona.   CATALONIA, SPAIN
 *         Webpage: https://cqllab.upc.edu/people/rferrericancho/
 *
 ********************************************************************/

namespace lal {

/**
@brief Detail namespace

Most algorithms are included here. Unless you have a really good reason to use
the algorithms in this namespace, please, refrain from doing so.
*/
namespace detail {



// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/// Namespace for the algorithms that compute the number of crossings.
namespace crossings { }



// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/// Namespace for algorithms to calculate the minimum sum of edge lengths
namespace Dmin {

	// -------------------------------------------------------------------------
	/// In unconstrained arrangements
	namespace unconstrained {}

	// -------------------------------------------------------------------------
	/// In bipartite arrangements.
	namespace bipartite {}

	// -------------------------------------------------------------------------
	/// In planar arrangements.
	namespace planar {}

	// -------------------------------------------------------------------------
	/// In projective arrangements.
	namespace projective {}

} // -- namespace Dmin



// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/// Functions useful to calculate both the minimum and maximum sum of edge lengths
namespace Dopt_utils {
} // -- namespace Dopt_utils



// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/// Functions useful to calculate the minimum sum of edge lengths
namespace Dmin_utils {
} // -- namespace Dmin_utils



// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/// Functions useful to calculate the maximum sum of edge lengths
namespace DMax_utils {
} // -- namespace DMax_utils



// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/// Namespace for algorithms to calculate the maximum sum of edge lengths
namespace DMax {
	
	// -------------------------------------------------------------------------
	/// In unconstrained arrangements
	namespace unconstrained {}
	
	// -------------------------------------------------------------------------
	/// In arrangements with only 1 thistle.
	namespace thistle_1 {}
	
	// -------------------------------------------------------------------------
	/// In bipartite arrangements.
	namespace bipartite {}
	
	// -------------------------------------------------------------------------
	/// In planar arrangements.
	namespace planar {}

	// -------------------------------------------------------------------------
	/// In projective arrangements.
	namespace projective {}

} // -- namespace DMax



// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/// Sorting algorithms.
namespace sorting {
} // -- namespace sorting



// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/// Algorithms to find maximum subtrees
namespace maximum_subtrees {

	// -------------------------------------------------------------------------
	/// Algorithms for caterpillar trees.
	namespace caterpillar {}

} // -- namespace maximum_stubtrees


} // -- namespace detail
} // -- namespace lal
